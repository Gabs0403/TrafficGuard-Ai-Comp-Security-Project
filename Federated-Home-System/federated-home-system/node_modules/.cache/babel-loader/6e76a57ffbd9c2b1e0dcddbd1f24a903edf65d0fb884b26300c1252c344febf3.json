{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ph-mo\\\\OneDrive\\\\Desktop\\\\2024\\\\Federated-Home-System\\\\Federated-Home-System\\\\federated-home-system\\\\src\\\\components\\\\cpuMemoryUsage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CpuMemoryUsage = () => {\n  _s();\n  const [cpuData, setCpuData] = useState({});\n  const [memoryData, setMemoryData] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCpuMemory = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/cpu_memory'); // Flask API endpoint\n        const data = await response.json();\n        if (data.status === 'Success') {\n          setCpuData(data.cpu);\n          setMemoryData(data.memory);\n        } else {\n          console.error('Error fetching CPU and memory data:', data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCpuMemory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u2699\\uFE0F CPU and Memory Usage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading CPU and memory data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"CPU Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Percentage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(cpuData).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [value, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Memory Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(memoryData).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [parseInt(value).toLocaleString(), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CpuMemoryUsage, \"OlQlVi6xSGSWl2C1oG7IC/xPYfk=\");\n_c = CpuMemoryUsage;\nexport default CpuMemoryUsage;\nvar _c;\n$RefreshReg$(_c, \"CpuMemoryUsage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CpuMemoryUsage","_s","cpuData","setCpuData","memoryData","setMemoryData","loading","setLoading","fetchCpuMemory","response","fetch","data","json","status","cpu","memory","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","value","index","parseInt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/ph-mo/OneDrive/Desktop/2024/Federated-Home-System/Federated-Home-System/federated-home-system/src/components/cpuMemoryUsage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CpuMemoryUsage = () => {\r\n  const [cpuData, setCpuData] = useState({});\r\n  const [memoryData, setMemoryData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCpuMemory = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/api/cpu_memory'); // Flask API endpoint\r\n        const data = await response.json();\r\n\r\n        if (data.status === 'Success') {\r\n          setCpuData(data.cpu);\r\n          setMemoryData(data.memory);\r\n        } else {\r\n          console.error('Error fetching CPU and memory data:', data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCpuMemory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h3>⚙️ CPU and Memory Usage</h3>\r\n      <div className=\"card mt-4\">\r\n        <div className=\"card-body\">\r\n          {loading ? (\r\n            <p>Loading CPU and memory data...</p>\r\n          ) : (\r\n            <>\r\n              {/* CPU Usage Table */}\r\n              <h5>CPU Usage</h5>\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Type</th>\r\n                    <th>Percentage</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(cpuData).map(([key, value], index) => (\r\n                    <tr key={index}>\r\n                      <td>{key}</td>\r\n                      <td>{value}%</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              {/* Memory Usage Table */}\r\n              <h5>Memory Usage</h5>\r\n              <table className=\"table table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Type</th>\r\n                    <th>Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Object.entries(memoryData).map(([key, value], index) => (\r\n                    <tr key={index}>\r\n                      <td>{key}</td>\r\n                      <td>{parseInt(value).toLocaleString()} KB</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CpuMemoryUsage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}